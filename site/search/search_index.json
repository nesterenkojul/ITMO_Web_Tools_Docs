{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 1","title":"\u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. <br> \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c"},{"location":"#-","text":"","title":"\u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.  \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c"},{"location":"#1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 1"},{"location":"1/authorization/","text":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI. \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f auth.py import datetime from fastapi import HTTPException, Security, Depends from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials from passlib.context import CryptContext import jwt import os from dotenv import load_dotenv load_dotenv() from connection import * from models_dir.user_models import * class AuthHandler: security = HTTPBearer() pwd_context = CryptContext(schemes=['bcrypt']) secret = os.getenv('SECRET') # \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f def get_hash(self, password): return self.pwd_context.hash(password) # \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f def verify(self, pwd, hashed_pwd): return self.pwd_context.verify(pwd, hashed_pwd, scheme='bcrypt') # \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430 def encode_token(self, user_id): payload = { 'exp': datetime.datetime.utcnow() + datetime.timedelta(hours=8), 'iat': datetime.datetime.utcnow(), 'sub': user_id } return jwt.encode(payload, self.secret, algorithm='HS256') # \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 def decode_token(self, token): try: payload = jwt.decode(token, self.secret, algorithms=['HS256']) return payload['sub'] except jwt.ExpiredSignatureError: raise HTTPException(status_code=401, detail=\"Signature expired\") except jwt.InvalidTokenError: raise HTTPException(status_code=401, detail=f\"Invalid token\") # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0435\u0441\u0441\u0438\u0438 def current_user(self, auth: HTTPAuthorizationCredentials = Security(security), session=Depends(get_session)) -> User: id = self.decode_token(auth.credentials) if not id: raise HTTPException(status_code=401, detail=\"User not authorized\") db_user = session.get(User, id) if not db_user: raise HTTPException(status_code=401, detail=\"User not authorized\") return db_user","title":"\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f"},{"location":"1/authorization/#1-fastapi","text":"","title":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI."},{"location":"1/authorization/#_1","text":"auth.py import datetime from fastapi import HTTPException, Security, Depends from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials from passlib.context import CryptContext import jwt import os from dotenv import load_dotenv load_dotenv() from connection import * from models_dir.user_models import * class AuthHandler: security = HTTPBearer() pwd_context = CryptContext(schemes=['bcrypt']) secret = os.getenv('SECRET') # \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f def get_hash(self, password): return self.pwd_context.hash(password) # \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f def verify(self, pwd, hashed_pwd): return self.pwd_context.verify(pwd, hashed_pwd, scheme='bcrypt') # \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430 def encode_token(self, user_id): payload = { 'exp': datetime.datetime.utcnow() + datetime.timedelta(hours=8), 'iat': datetime.datetime.utcnow(), 'sub': user_id } return jwt.encode(payload, self.secret, algorithm='HS256') # \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 def decode_token(self, token): try: payload = jwt.decode(token, self.secret, algorithms=['HS256']) return payload['sub'] except jwt.ExpiredSignatureError: raise HTTPException(status_code=401, detail=\"Signature expired\") except jwt.InvalidTokenError: raise HTTPException(status_code=401, detail=f\"Invalid token\") # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0435\u0441\u0441\u0438\u0438 def current_user(self, auth: HTTPAuthorizationCredentials = Security(security), session=Depends(get_session)) -> User: id = self.decode_token(auth.credentials) if not id: raise HTTPException(status_code=401, detail=\"User not authorized\") db_user = session.get(User, id) if not db_user: raise HTTPException(status_code=401, detail=\"User not authorized\") return db_user","title":"\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f"},{"location":"1/database/","text":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI. \u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0421\u0445\u0435\u043c\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0421\u043a\u0440\u0438\u043f\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414 connection.py from sqlmodel import SQLModel, Session, create_engine import os from dotenv import load_dotenv load_dotenv() db_url = os.getenv('DB_ADMIN') engine = create_engine(db_url, echo=True) def init_db(): SQLModel.metadata.create_all(engine) def get_session(): with Session(engine) as session: yield session","title":"\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"1/database/#1-fastapi","text":"","title":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI."},{"location":"1/database/#_1","text":"","title":"\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"1/database/#_2","text":"","title":"\u0421\u0445\u0435\u043c\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"1/database/#_3","text":"connection.py from sqlmodel import SQLModel, Session, create_engine import os from dotenv import load_dotenv load_dotenv() db_url = os.getenv('DB_ADMIN') engine = create_engine(db_url, echo=True) def init_db(): SQLModel.metadata.create_all(engine) def get_session(): with Session(engine) as session: yield session","title":"\u0421\u043a\u0440\u0438\u043f\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414"},{"location":"1/description/","text":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0422\u0435\u043c\u0430 - \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u043e\u0432 \u0432 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435. \u0417\u0430\u0434\u0430\u0447\u0430 - \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u043e\u0432 \u0434\u043b\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u044b\u0445 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0439. \u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u043e\u043f\u0443\u0442\u0447\u0438\u043a\u043e\u0432 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0439, \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u0445 \u0438 \u043e\u0431\u0441\u0443\u0436\u0434\u0430\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u0435\u0439: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u0438, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0435\u0431\u0435, \u0441\u0432\u043e\u0438\u0445 \u043d\u0430\u0432\u044b\u043a\u0430\u0445, \u043e\u043f\u044b\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f\u0445 \u043f\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u043c. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043e\u043a: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043e \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u0445 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0434\u0430\u0442, \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430, \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u043c\u043e\u0439 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0434\u0435\u0442\u0430\u043b\u0435\u0439. \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u043f\u0443\u0442\u0447\u0438\u043a\u043e\u0432: \u0424\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043f\u0443\u0442\u0447\u0438\u043a\u043e\u0432 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043f\u043e\u0435\u0437\u0434\u043e\u043a \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0435\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043c\u0435\u0441\u0442\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043c\u0435\u0441\u0442\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0434\u0430\u0442\u044b \u0438 \u0442.\u0434. \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u043c\u0438: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u043c\u0438, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435/\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0435\u0439, \u043e\u0442\u043c\u0435\u043d\u0443 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 \u0438 \u0442.\u0434.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"},{"location":"1/description/#1-fastapi","text":"","title":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI."},{"location":"1/description/#_1","text":"","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"},{"location":"1/description/#-","text":"\u0417\u0430\u0434\u0430\u0447\u0430 - \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u043e\u0432 \u0434\u043b\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u044b\u0445 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0439. \u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u043e\u043f\u0443\u0442\u0447\u0438\u043a\u043e\u0432 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0439, \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u0445 \u0438 \u043e\u0431\u0441\u0443\u0436\u0434\u0430\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u0438 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435: \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u0435\u0439: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u0438, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0435\u0431\u0435, \u0441\u0432\u043e\u0438\u0445 \u043d\u0430\u0432\u044b\u043a\u0430\u0445, \u043e\u043f\u044b\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f\u0445 \u043f\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u043c. \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043e\u043a: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043e \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u0445 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0434\u0430\u0442, \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430, \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u043c\u043e\u0439 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0434\u0435\u0442\u0430\u043b\u0435\u0439. \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u043f\u0443\u0442\u0447\u0438\u043a\u043e\u0432: \u0424\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e\u043f\u0443\u0442\u0447\u0438\u043a\u043e\u0432 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043f\u043e\u0435\u0437\u0434\u043e\u043a \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0435\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043c\u0435\u0441\u0442\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043c\u0435\u0441\u0442\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0434\u0430\u0442\u044b \u0438 \u0442.\u0434. \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u043c\u0438: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u0435\u0437\u0434\u043a\u0430\u043c\u0438, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435/\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0435\u0439, \u043e\u0442\u043c\u0435\u043d\u0443 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 \u0438 \u0442.\u0434.","title":"\u0422\u0435\u043c\u0430 - \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u043e\u0432 \u0432 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435."},{"location":"1/endpoints/","text":"\u041b\u0420 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u041f\u043e\u0435\u0437\u0434\u043a\u0430 - Trip \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0435\u0437\u0434\u043e\u043a GET -> /trip/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0435\u0437\u0434\u043e\u043a \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f GET -> /trip/my \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 GET -> /trip/{trip_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 (\u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043d\u0435\u0451 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438) POST -> /trip \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) PATCH -> /trip/edit/{trip_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) DELETE -> /trip/delete/{trip_id} \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - User \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 GET -> /user/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f GET -> /user/me/pwd \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f PATCH -> /user/me/pwd \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f GET -> /user/{user_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 (\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f) \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f POST -> /user/register \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f POST -> /user/login \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f PATCH -> /user/edit/{user_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f DELETE -> /user/delete/{user_id} \u0421\u0432\u044f\u0437\u044c \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c-\u041f\u043e\u0435\u0437\u0434\u043a\u0430 - UserTripLink \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u0432\u044f\u0437\u0435\u0439 GET -> /usertrip/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 GET -> /usertrip/{user_id}in{trip_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 POST -> /usertrip \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) DELETE -> /UserTripLink/delete/{user_id}in{trip_id} \u0421\u0442\u043e\u044f\u043d\u043a\u0430 - Stay \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u0442\u043e\u044f\u043d\u043e\u043a GET -> /stay/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 GET -> /stay/{stay_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 POST -> /stay \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 PATCH -> /stay/edit/{stay_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 DELETE -> /stay/delete/{stay_id} \u041f\u0435\u0440\u0435\u0435\u0437\u0434 - Transition \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u043e\u0432 GET -> /transition/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 GET -> /transition/{transition_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 POST -> /transition \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 PATCH -> /transition/edit/{transition_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 DELETE -> /transition/delete/{transition_id} \u042d\u0442\u0430\u043f - Step \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u044d\u0442\u0430\u043f\u043e\u0432 GET -> /step/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 GET -> /step/{step_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) POST -> /step \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u0430\u043f\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) PATCH -> /step/edit/{step_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u0430\u043f\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) DELETE -> /step/delete/{step_id}","title":"\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b"},{"location":"1/endpoints/#3-django-rest-api","text":"","title":"\u041b\u0420 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API."},{"location":"1/endpoints/#_1","text":"","title":"\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b"},{"location":"1/endpoints/#-trip","text":"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0435\u0437\u0434\u043e\u043a GET -> /trip/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0435\u0437\u0434\u043e\u043a \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f GET -> /trip/my \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 GET -> /trip/{trip_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 (\u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043d\u0435\u0451 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438) POST -> /trip \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) PATCH -> /trip/edit/{trip_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0435\u0437\u0434\u043a\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) DELETE -> /trip/delete/{trip_id}","title":"\u041f\u043e\u0435\u0437\u0434\u043a\u0430 - Trip"},{"location":"1/endpoints/#-user","text":"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 GET -> /user/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f GET -> /user/me/pwd \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f PATCH -> /user/me/pwd \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f GET -> /user/{user_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 (\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f) \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f POST -> /user/register \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f POST -> /user/login \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f PATCH -> /user/edit/{user_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f DELETE -> /user/delete/{user_id}","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - User"},{"location":"1/endpoints/#-usertriplink","text":"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u0432\u044f\u0437\u0435\u0439 GET -> /usertrip/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 GET -> /usertrip/{user_id}in{trip_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0441\u0432\u044f\u0437\u0438 POST -> /usertrip \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0438 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) DELETE -> /UserTripLink/delete/{user_id}in{trip_id}","title":"\u0421\u0432\u044f\u0437\u044c \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c-\u041f\u043e\u0435\u0437\u0434\u043a\u0430 - UserTripLink"},{"location":"1/endpoints/#-stay","text":"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u0442\u043e\u044f\u043d\u043e\u043a GET -> /stay/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 GET -> /stay/{stay_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 POST -> /stay \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 PATCH -> /stay/edit/{stay_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u043e\u044f\u043d\u043a\u0438 DELETE -> /stay/delete/{stay_id}","title":"\u0421\u0442\u043e\u044f\u043d\u043a\u0430 - Stay"},{"location":"1/endpoints/#-transition","text":"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u043e\u0432 GET -> /transition/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 GET -> /transition/{transition_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 POST -> /transition \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 PATCH -> /transition/edit/{transition_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u0430 DELETE -> /transition/delete/{transition_id}","title":"\u041f\u0435\u0440\u0435\u0435\u0437\u0434 - Transition"},{"location":"1/endpoints/#-step","text":"\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u043f\u0438\u0441\u043a\u0430 \u044d\u0442\u0430\u043f\u043e\u0432 GET -> /step/all \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043e\u0434\u043d\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 GET -> /step/{step_id} \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) POST -> /step \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u0430\u043f\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) PATCH -> /step/edit/{step_id} \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u0430\u043f\u0430 (\u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c) DELETE -> /step/delete/{step_id}","title":"\u042d\u0442\u0430\u043f - Step"},{"location":"1/models/","text":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI. \u041c\u043e\u0434\u0435\u043b\u0438 \u041f\u043e\u0435\u0437\u0434\u043a\u0430 - Trip trip_models.py class StatusType(Enum): open = \"open\" closed = \"closed\" cancelled = \"cancelled\" class TripDefault(SQLModel): status: StatusType = StatusType.open member_capacity: Optional[int] = Field(default=None, ge=0) class Trip(TripDefault, table=True): id: int = Field(default=None, primary_key=True) members: Optional[List[\"UserTripLink\"]] = Relationship(back_populates=\"trip\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) steps: Optional[List[\"Step\"]] = Relationship(back_populates=\"trip\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) class TripDetailed(TripDefault): members: Optional[List[\"UserTripLinkUsers\"]] = None steps: Optional[List[\"StepDetailed\"]] = None \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - User user_models.py class GenderType(Enum): undefined = \"-\" female = \"f\" male = \"m\" class UserDefault(SQLModel): username: str = Field(index=True, unique=True) first_name: str last_name: str gender: GenderType = \"-\" age: int = Field(ge=0, le=130) telephone: str = Field(regex=\"\\+?\\d{7,11}\") email: EmailStr = Field(sa_type=AutoString) bio: Optional[str] = \"\" class User(UserDefault, table=True): id: int = Field(default=None, primary_key=True) password: str = Field(min_length=8, max_length=60) registered: datetime.datetime = datetime.datetime.now() is_admin: bool = False trips: Optional[List[\"UserTripLink\"]] = Relationship(back_populates=\"user\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) class UserInput(SQLModel): username: str = Field(index=True, unique=True) password: str = Field(min_length=8, max_length=60) password2: str = Field(min_length=8, max_length=60) first_name: str last_name: str gender: GenderType = \"-\" age: int = Field(ge=0, le=130) telephone: str = Field(regex=\"\\+?\\d{7,11}\") email: EmailStr = Field(sa_type=AutoString) bio: Optional[str] = \"\" @validator('password2') def check_match(cls, pwd, values, **kwargs): if 'password' in values and pwd != values['password']: raise ValueError(\"passwords don't match\") return pwd class UserLogin(SQLModel): username: str password: str class UserPwd(SQLModel): old_password: str = Field(min_length=8, max_length=60) new_password: str = Field(min_length=8, max_length=60) new_password2: str = Field(min_length=8, max_length=60) \u0421\u0432\u044f\u0437\u044c \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c-\u041f\u043e\u0435\u0437\u0434\u043a\u0430 - UserTripLink \u0410\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c, \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043f\u043e\u0435\u0437\u0434\u043a\u043e\u0439 usertriplink_models.py class UserTripLinkDefault(SQLModel): __table_args__ = ( UniqueConstraint(\"trip_id\", \"user_id\", name=\"unique pair of ids\"), ) user_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"user.id\", ondelete='CASCADE'), default=None)) trip_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"trip.id\", ondelete='CASCADE'), default=None)) role: Optional[str] class UserTripLink(UserTripLinkDefault, table=True): id: int = Field(default=None, primary_key=True) user: \"User\" = Relationship(back_populates=\"trips\") trip: \"Trip\" = Relationship(back_populates=\"members\") class UserTripLinkTrips(SQLModel): role: Optional[str] trip: \"TripDetailed\" = None class UserTripLinkUsers(SQLModel): role: Optional[str] user: \"UserDefault\" = None \u0421\u0442\u043e\u044f\u043d\u043a\u0430 - Stay stay_models.py class AccomodationType(Enum): hotel = \"hotel\" hostel = \"hostel\" apartments = \"apartments\" couchsurfing = \"couchsurfing\" tent = \"tent\" class StayDefault(SQLModel): location: str address: str accomodation: AccomodationType class Stay(StayDefault, table=True): id: int = Field(default=None, primary_key=True) steps: Optional[List[\"Step\"]] = Relationship(back_populates=\"stay\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) \u041f\u0435\u0440\u0435\u0435\u0437\u0434 - Transition transiition_models.py class TransportType(Enum): plane = \"plane\" train = \"train\" ship = \"ship\" ferry = \"ferry\" bus = \"bus\" car = \"car\" motorbike = \"motorbike\" bycicle = \"bycicle\" walking = \"walking\" hitchhiking = \"hitchhiking\" class TransitionDefault(SQLModel): location_from: str location_to: str transport: TransportType class Transition(TransitionDefault, table=True): id: int = Field(default=None, primary_key=True) steps: Optional[List[\"Step\"]] = Relationship(back_populates=\"transition\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) \u042d\u0442\u0430\u043f - Step \u0410\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c, \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0430\u044f \u043f\u043e\u0435\u0437\u0434\u043a\u0443 \u0441\u043e \u0441\u0442\u043e\u044f\u043d\u043a\u043e\u0439 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u043e\u043c step_models.py class StepDefault(SQLModel): trip_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"trip.id\", ondelete='CASCADE'), default=None)) date_from: datetime = Field(ge=datetime.now()) date_to: datetime = Field(ge=datetime.now()) est_price: float = Field(default=0, ge=0) stay_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"stay.id\", ondelete='CASCADE'), default=None)) #OR transition_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"transition.id\", ondelete='CASCADE'), default=None)) @validator('date_to') def from_lt_to(cls, date, values, **kwargs): if 'date_from' in values and date < values['date_from']: raise ValueError(\"date_to should be later than date_from\") return date class Step(StepDefault, table=True): id: int = Field(default=None, primary_key=True) trip: \"Trip\" = Relationship(back_populates=\"steps\") stay: Optional[\"Stay\"] = Relationship(back_populates=\"steps\") transition: Optional[\"Transition\"] = Relationship(back_populates=\"steps\") class StepDetailed(StepDefault): trip: \"Trip\" = None stay: Optional[\"Stay\"] = None transition: Optional[\"Transition\"] = None","title":"\u041c\u043e\u0434\u0435\u043b\u0438"},{"location":"1/models/#1-fastapi","text":"","title":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI."},{"location":"1/models/#_1","text":"","title":"\u041c\u043e\u0434\u0435\u043b\u0438"},{"location":"1/models/#-trip","text":"trip_models.py class StatusType(Enum): open = \"open\" closed = \"closed\" cancelled = \"cancelled\" class TripDefault(SQLModel): status: StatusType = StatusType.open member_capacity: Optional[int] = Field(default=None, ge=0) class Trip(TripDefault, table=True): id: int = Field(default=None, primary_key=True) members: Optional[List[\"UserTripLink\"]] = Relationship(back_populates=\"trip\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) steps: Optional[List[\"Step\"]] = Relationship(back_populates=\"trip\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) class TripDetailed(TripDefault): members: Optional[List[\"UserTripLinkUsers\"]] = None steps: Optional[List[\"StepDetailed\"]] = None","title":"\u041f\u043e\u0435\u0437\u0434\u043a\u0430 - Trip"},{"location":"1/models/#-user","text":"user_models.py class GenderType(Enum): undefined = \"-\" female = \"f\" male = \"m\" class UserDefault(SQLModel): username: str = Field(index=True, unique=True) first_name: str last_name: str gender: GenderType = \"-\" age: int = Field(ge=0, le=130) telephone: str = Field(regex=\"\\+?\\d{7,11}\") email: EmailStr = Field(sa_type=AutoString) bio: Optional[str] = \"\" class User(UserDefault, table=True): id: int = Field(default=None, primary_key=True) password: str = Field(min_length=8, max_length=60) registered: datetime.datetime = datetime.datetime.now() is_admin: bool = False trips: Optional[List[\"UserTripLink\"]] = Relationship(back_populates=\"user\", sa_relationship_kwargs={\"cascade\": \"all, delete\"}) class UserInput(SQLModel): username: str = Field(index=True, unique=True) password: str = Field(min_length=8, max_length=60) password2: str = Field(min_length=8, max_length=60) first_name: str last_name: str gender: GenderType = \"-\" age: int = Field(ge=0, le=130) telephone: str = Field(regex=\"\\+?\\d{7,11}\") email: EmailStr = Field(sa_type=AutoString) bio: Optional[str] = \"\" @validator('password2') def check_match(cls, pwd, values, **kwargs): if 'password' in values and pwd != values['password']: raise ValueError(\"passwords don't match\") return pwd class UserLogin(SQLModel): username: str password: str class UserPwd(SQLModel): old_password: str = Field(min_length=8, max_length=60) new_password: str = Field(min_length=8, max_length=60) new_password2: str = Field(min_length=8, max_length=60)","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - User"},{"location":"1/models/#-usertriplink","text":"\u0410\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c, \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043f\u043e\u0435\u0437\u0434\u043a\u043e\u0439 usertriplink_models.py class UserTripLinkDefault(SQLModel): __table_args__ = ( UniqueConstraint(\"trip_id\", \"user_id\", name=\"unique pair of ids\"), ) user_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"user.id\", ondelete='CASCADE'), default=None)) trip_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"trip.id\", ondelete='CASCADE'), default=None)) role: Optional[str] class UserTripLink(UserTripLinkDefault, table=True): id: int = Field(default=None, primary_key=True) user: \"User\" = Relationship(back_populates=\"trips\") trip: \"Trip\" = Relationship(back_populates=\"members\") class UserTripLinkTrips(SQLModel): role: Optional[str] trip: \"TripDetailed\" = None class UserTripLinkUsers(SQLModel): role: Optional[str] user: \"UserDefault\" = None","title":"\u0421\u0432\u044f\u0437\u044c \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c-\u041f\u043e\u0435\u0437\u0434\u043a\u0430 - UserTripLink"},{"location":"1/models/#-stay","text":"stay_models.py class AccomodationType(Enum): hotel = \"hotel\" hostel = \"hostel\" apartments = \"apartments\" couchsurfing = \"couchsurfing\" tent = \"tent\" class StayDefault(SQLModel): location: str address: str accomodation: AccomodationType class Stay(StayDefault, table=True): id: int = Field(default=None, primary_key=True) steps: Optional[List[\"Step\"]] = Relationship(back_populates=\"stay\", sa_relationship_kwargs={\"cascade\": \"all, delete\"})","title":"\u0421\u0442\u043e\u044f\u043d\u043a\u0430 - Stay"},{"location":"1/models/#-transition","text":"transiition_models.py class TransportType(Enum): plane = \"plane\" train = \"train\" ship = \"ship\" ferry = \"ferry\" bus = \"bus\" car = \"car\" motorbike = \"motorbike\" bycicle = \"bycicle\" walking = \"walking\" hitchhiking = \"hitchhiking\" class TransitionDefault(SQLModel): location_from: str location_to: str transport: TransportType class Transition(TransitionDefault, table=True): id: int = Field(default=None, primary_key=True) steps: Optional[List[\"Step\"]] = Relationship(back_populates=\"transition\", sa_relationship_kwargs={\"cascade\": \"all, delete\"})","title":"\u041f\u0435\u0440\u0435\u0435\u0437\u0434 - Transition"},{"location":"1/models/#-step","text":"\u0410\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c, \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0430\u044f \u043f\u043e\u0435\u0437\u0434\u043a\u0443 \u0441\u043e \u0441\u0442\u043e\u044f\u043d\u043a\u043e\u0439 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0435\u0437\u0434\u043e\u043c step_models.py class StepDefault(SQLModel): trip_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"trip.id\", ondelete='CASCADE'), default=None)) date_from: datetime = Field(ge=datetime.now()) date_to: datetime = Field(ge=datetime.now()) est_price: float = Field(default=0, ge=0) stay_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"stay.id\", ondelete='CASCADE'), default=None)) #OR transition_id: Optional[int] = Field(sa_column=Column(Integer, ForeignKey(\"transition.id\", ondelete='CASCADE'), default=None)) @validator('date_to') def from_lt_to(cls, date, values, **kwargs): if 'date_from' in values and date < values['date_from']: raise ValueError(\"date_to should be later than date_from\") return date class Step(StepDefault, table=True): id: int = Field(default=None, primary_key=True) trip: \"Trip\" = Relationship(back_populates=\"steps\") stay: Optional[\"Stay\"] = Relationship(back_populates=\"steps\") transition: Optional[\"Transition\"] = Relationship(back_populates=\"steps\") class StepDetailed(StepDefault): trip: \"Trip\" = None stay: Optional[\"Stay\"] = None transition: Optional[\"Transition\"] = None","title":"\u042d\u0442\u0430\u043f - Step"},{"location":"1/practice/","text":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI. \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 1 \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 2 \u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430"},{"location":"1/practice/#1-fastapi","text":"","title":"\u041b\u0420 1. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f FastAPI."},{"location":"1/practice/#_1","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430"},{"location":"1/practice/#1","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 1"},{"location":"1/practice/#2","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 2"},{"location":"1/practice/#3","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3"}]}